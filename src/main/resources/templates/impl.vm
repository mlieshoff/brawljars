package ${helper.getPackageName($properties)};

import java.io.IOException;
import brawljars.v2.api.AbstractApi;
import brawljars.v2.api.ApiContext;
import brawljars.v2.api.Connector;
import brawljars.v2.api.RequestContext;

class ${filename} extends AbstractApi implements ${WordUtils.capitalize($object.name)}Api {

  public ${filename}(ApiContext apiContext) {
    super(apiContext);
  }

  @Override
  #foreach( $method in $object.method )
    #set($attribute=$method.attribute.get(0))
  public ${helper.getTypeName($method.return)} ${helper.getMethodName($method.name)}(${helper.getTypeName($attribute.type)} ${helper.getAttributeName($attribute.type)}) throws IOException {
    String apiKey = getApiContext().getApiKey();
    Connector connector = getApiContext().getConnector();
    String url = createUrl("${helper.findContextValue($method.getContext(), 'url')}", ${helper.getAttributeName($attribute.type)});
    RequestContext requestContext = new RequestContext(url, apiKey, ${helper.getAttributeName($attribute.type)}, ${helper.getTypeName($method.return)}.class);
    return connector.get(requestContext);
  }

#end
}