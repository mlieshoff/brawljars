package ${replacer.getPackageName($properties)};

import static org.junit.jupiter.api.Assertions.assertEquals;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import brawljars.IntegrationTestBase;

public class ${filename} extends IntegrationTestBase {

  private BrawlersApi unitUnderTest;

  @BeforeEach
  void setUp() {
    unitUnderTest = getBrawlJars().getApi(${WordUtils.capitalize($object.name)}Api.class);
  }

#foreach($method in $object.method)
  #set($methodName=${replacer.getMethodName($method.name)})
  @Test
  void ${methodName}() throws Exception {
    #set($parameterType=${replacer.getTypeName($method.attribute[0].type)})
    #set($parameterName=${replacer.getAttributeName($method.attribute[0].name)})
    #set($requestObject=${helper.getEntity($method.attribute[0].type)})
    #foreach($attribute in $requestObject.attribute)
    ${replacer.getTypeName($attribute.type)} ${replacer.getAttributeName($attribute.name)} = "$attribute.name";
    #end
    $parameterType $parameterName = ${parameterType}.builder(${replacer.concatAttributes($requestObject.attribute, ', ', '{name}')}).build();
    prepare("${replacer.findContextValue($method.getContext(), 'url')}"${replacer.concatAttributes($requestObject.attribute, '', '.replace("{{name}}", {name})')}, "src/test/resources/${WordUtils.uncapitalize($object.name)}-${methodName}.json");

    ${replacer.getTypeName($method.return)} actual = unitUnderTest.${methodName}($parameterName);

    assertEquals(getExpected(), json(actual));
  }

#end
}