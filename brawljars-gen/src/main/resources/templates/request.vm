package ${replacer.getPackageName($properties)};

import java.util.Map;
import brawljars.common.Request;
import lombok.Builder;
import lombok.Getter;

public class ${filename} extends Request {

#foreach( $attribute in $object.attribute )
  private final ${replacer.getTypeName($attribute.type)} ${replacer.getAttributeName($attribute.name)};
  #end

  @Builder
  private ${filename}(${replacer.concatAttributes($object.attribute, ', ', '{type} {name}')}) {
    #foreach( $attribute in $object.attribute )
    this.${replacer.getAttributeName($attribute.name)} = ${replacer.getAttributeName($attribute.name)};
    #end
  }

  public static ${filename}Builder builder(${replacer.concatAttributes($object.attribute, ', ', '{type} {name}')}) {
    return new ${filename}Builder()
      #foreach( $attribute in $object.attribute )
      .${replacer.getAttributeName($attribute.name)}(${replacer.getAttributeName($attribute.name)})
      #end
    ;
  }

  @Override
  public Map<String, String> getRestParameters() {
    Map<String, String> map = super.getRestParameters();
    #foreach( $attribute in $object.attribute )
    map.put("${attribute.name}", ${replacer.getAttributeName($attribute.name)});
    #end
    return map;
  }

}